{
    "scope": "text.html.basic source.php.embedded.block.html comment.block.documentation.phpdoc.php",

    "completions":
    [
        { "trigger": "@Assert\\NotBlank", "contents": "Assert\\NotBlank($0)" },
        { "trigger": "@Assert\\Blank", "contents": "Assert\\Blank($0)" },
        { "trigger": "@Assert\\NotNull", "contents": "Assert\\NotNull($0)" },
        { "trigger": "@Assert\\Null", "contents": "Assert\\Null($0)" },
        { "trigger": "@Assert\\True", "contents": "Assert\\True($0)" },
        { "trigger": "@Assert\\False", "contents": "Assert\\False($0)" },
        { "trigger": "@Assert\\Type", "contents": "Assert\\Type($0)" },
        { "trigger": "@Assert\\Email", "contents": "Assert\\Email($0)" },
        { "trigger": "@Assert\\Length", "contents": "Assert\\Length($0)" },
        { "trigger": "@Assert\\Url", "contents": "Assert\\Url($0)" },
        { "trigger": "@Assert\\Regex", "contents": "Assert\\Regex($0)" },
        { "trigger": "@Assert\\Ip", "contents": "Assert\\Ip($0)" },
        { "trigger": "@Assert\\Range", "contents": "Assert\\Range($0)" },
        { "trigger": "@Assert\\EqualTo", "contents": "Assert\\EqualTo($0)" },
        { "trigger": "@Assert\\NotEqualTo", "contents": "Assert\\NotEqualTo($0)" },
        { "trigger": "@Assert\\IdenticalTo", "contents": "Assert\\IdenticalTo($0)" },
        { "trigger": "@Assert\\NotIdenticalTo", "contents": "Assert\\NotIdenticalTo($0)" },
        { "trigger": "@Assert\\LessThan", "contents": "Assert\\LessThan($0)" },
        { "trigger": "@Assert\\LessThanOrEqual", "contents": "Assert\\LessThanOrEqual($0)" },
        { "trigger": "@Assert\\GreaterThan", "contents": "Assert\\GreaterThan($0)" },
        { "trigger": "@Assert\\GreaterThanOrEqual", "contents": "Assert\\GreaterThanOrEqual($0)" },
        { "trigger": "@Assert\\Date", "contents": "Assert\\Date($0)" },
        { "trigger": "@Assert\\DateTime", "contents": "Assert\\DateTime($0)" },
        { "trigger": "@Assert\\Time", "contents": "Assert\\Time($0)" },
        { "trigger": "@Assert\\Choice", "contents": "Assert\\Choice($0)" },
        { "trigger": "@Assert\\Collection", "contents": "Assert\\Collection($0)" },
        { "trigger": "@Assert\\Count", "contents": "Assert\\Count($0)" },
        { "trigger": "@Assert\\UniqueEntity", "contents": "Assert\\UniqueEntity($0)" },
        { "trigger": "@Assert\\Language", "contents": "Assert\\Language($0)" },
        { "trigger": "@Assert\\Locale", "contents": "Assert\\Locale($0)" },
        { "trigger": "@Assert\\Country", "contents": "Assert\\Country($0)" },
        { "trigger": "@Assert\\File", "contents": "Assert\\File($0)" },
        { "trigger": "@Assert\\Image", "contents": "Assert\\Image($0)" },
        { "trigger": "@Assert\\CardScheme", "contents": "Assert\\CardScheme($0)" },
        { "trigger": "@Assert\\Luhn", "contents": "Assert\\Luhn($0)" },
        { "trigger": "@Assert\\Iban", "contents": "Assert\\Iban($0)" },
        { "trigger": "@Assert\\Isbn", "contents": "Assert\\Isbn($0)" },
        { "trigger": "@Assert\\Issn", "contents": "Assert\\Issn($0)" },
        { "trigger": "@Assert\\Callback", "contents": "Assert\\Callback($0)" },
        { "trigger": "@Assert\\All", "contents": "Assert\\All($0)" },
        { "trigger": "@Assert\\UserPassword", "contents": "Assert\\UserPassword($0)" },
        { "trigger": "@Assert\\Valid", "contents": "Assert\\Valid($0)" }
    ]
}
